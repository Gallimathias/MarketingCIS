#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TheMarketingPlatform.Database
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="TheMarketingPlatform")]
	internal partial class MainDatabaseContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnCreated();
    partial void InsertLuisEntity(LuisEntity instance);
    partial void UpdateLuisEntity(LuisEntity instance);
    partial void DeleteLuisEntity(LuisEntity instance);
    partial void InsertLuisIntent(LuisIntent instance);
    partial void UpdateLuisIntent(LuisIntent instance);
    partial void DeleteLuisIntent(LuisIntent instance);
    partial void InsertLuisResponse(LuisResponse instance);
    partial void UpdateLuisResponse(LuisResponse instance);
    partial void DeleteLuisResponse(LuisResponse instance);
    partial void InsertMail(Mail instance);
    partial void UpdateMail(Mail instance);
    partial void DeleteMail(Mail instance);
    partial void InsertMailAddresses(MailAddresses instance);
    partial void UpdateMailAddresses(MailAddresses instance);
    partial void DeleteMailAddresses(MailAddresses instance);
    partial void InsertMailAttachment(MailAttachment instance);
    partial void UpdateMailAttachment(MailAttachment instance);
    partial void DeleteMailAttachment(MailAttachment instance);
    #endregion
		
		public MainDatabaseContext() : 
				base(global::TheMarketingPlatform.Database.Properties.Settings.Default.TheMarketingPlatformConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public MainDatabaseContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MainDatabaseContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MainDatabaseContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MainDatabaseContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<LuisEntity> LuisEntity
		{
			get
			{
				return this.GetTable<LuisEntity>();
			}
		}
		
		public System.Data.Linq.Table<LuisIntent> LuisIntent
		{
			get
			{
				return this.GetTable<LuisIntent>();
			}
		}
		
		public System.Data.Linq.Table<LuisResponse> LuisResponse
		{
			get
			{
				return this.GetTable<LuisResponse>();
			}
		}
		
		public System.Data.Linq.Table<Mail> Mail
		{
			get
			{
				return this.GetTable<Mail>();
			}
		}
		
		public System.Data.Linq.Table<MailAddresses> MailAddresses
		{
			get
			{
				return this.GetTable<MailAddresses>();
			}
		}
		
		public System.Data.Linq.Table<MailAttachment> MailAttachment
		{
			get
			{
				return this.GetTable<MailAttachment>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LuisEntity")]
	public partial class LuisEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LuisResponseId;
		
		private int _Id;
		
		private string _Entity;
		
		private string _Type;
		
		private System.Nullable<int> _StartIndex;
		
		private System.Nullable<int> _EndIndex;
		
		private double _Score;
		
		private EntityRef<LuisResponse> _LuisResponse;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLuisResponseIdChanging(int value);
    partial void OnLuisResponseIdChanged();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnEntityChanging(string value);
    partial void OnEntityChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnStartIndexChanging(System.Nullable<int> value);
    partial void OnStartIndexChanged();
    partial void OnEndIndexChanging(System.Nullable<int> value);
    partial void OnEndIndexChanged();
    partial void OnScoreChanging(double value);
    partial void OnScoreChanged();
    #endregion
		
		public LuisEntity()
		{
			this._LuisResponse = default(EntityRef<LuisResponse>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LuisResponseId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int LuisResponseId
		{
			get
			{
				return this._LuisResponseId;
			}
			set
			{
				if ((this._LuisResponseId != value))
				{
					if (this._LuisResponse.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLuisResponseIdChanging(value);
					this.SendPropertyChanging();
					this._LuisResponseId = value;
					this.SendPropertyChanged("LuisResponseId");
					this.OnLuisResponseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Entity", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Entity
		{
			get
			{
				return this._Entity;
			}
			set
			{
				if ((this._Entity != value))
				{
					this.OnEntityChanging(value);
					this.SendPropertyChanging();
					this._Entity = value;
					this.SendPropertyChanged("Entity");
					this.OnEntityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartIndex", DbType="Int")]
		public System.Nullable<int> StartIndex
		{
			get
			{
				return this._StartIndex;
			}
			set
			{
				if ((this._StartIndex != value))
				{
					this.OnStartIndexChanging(value);
					this.SendPropertyChanging();
					this._StartIndex = value;
					this.SendPropertyChanged("StartIndex");
					this.OnStartIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndIndex", DbType="Int")]
		public System.Nullable<int> EndIndex
		{
			get
			{
				return this._EndIndex;
			}
			set
			{
				if ((this._EndIndex != value))
				{
					this.OnEndIndexChanging(value);
					this.SendPropertyChanging();
					this._EndIndex = value;
					this.SendPropertyChanged("EndIndex");
					this.OnEndIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Score", DbType="Float NOT NULL")]
		public double Score
		{
			get
			{
				return this._Score;
			}
			set
			{
				if ((this._Score != value))
				{
					this.OnScoreChanging(value);
					this.SendPropertyChanging();
					this._Score = value;
					this.SendPropertyChanged("Score");
					this.OnScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LuisResponse_LuisEntity", Storage="_LuisResponse", ThisKey="LuisResponseId", OtherKey="Id", IsForeignKey=true)]
		public LuisResponse LuisResponse
		{
			get
			{
				return this._LuisResponse.Entity;
			}
			set
			{
				LuisResponse previousValue = this._LuisResponse.Entity;
				if (((previousValue != value) 
							|| (this._LuisResponse.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LuisResponse.Entity = null;
						previousValue.LuisEntity.Remove(this);
					}
					this._LuisResponse.Entity = value;
					if ((value != null))
					{
						value.LuisEntity.Add(this);
						this._LuisResponseId = value.Id;
					}
					else
					{
						this._LuisResponseId = default(int);
					}
					this.SendPropertyChanged("LuisResponse");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LuisIntent")]
	public partial class LuisIntent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LuisResponseId;
		
		private int _Id;
		
		private string _Intent;
		
		private double _Score;
		
		private bool _IsTopScore;
		
		private EntityRef<LuisResponse> _LuisResponse;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLuisResponseIdChanging(int value);
    partial void OnLuisResponseIdChanged();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIntentChanging(string value);
    partial void OnIntentChanged();
    partial void OnScoreChanging(double value);
    partial void OnScoreChanged();
    partial void OnIsTopScoreChanging(bool value);
    partial void OnIsTopScoreChanged();
    #endregion
		
		public LuisIntent()
		{
			this._LuisResponse = default(EntityRef<LuisResponse>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LuisResponseId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int LuisResponseId
		{
			get
			{
				return this._LuisResponseId;
			}
			set
			{
				if ((this._LuisResponseId != value))
				{
					if (this._LuisResponse.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLuisResponseIdChanging(value);
					this.SendPropertyChanging();
					this._LuisResponseId = value;
					this.SendPropertyChanged("LuisResponseId");
					this.OnLuisResponseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Intent", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Intent
		{
			get
			{
				return this._Intent;
			}
			set
			{
				if ((this._Intent != value))
				{
					this.OnIntentChanging(value);
					this.SendPropertyChanging();
					this._Intent = value;
					this.SendPropertyChanged("Intent");
					this.OnIntentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Score", DbType="Float NOT NULL")]
		public double Score
		{
			get
			{
				return this._Score;
			}
			set
			{
				if ((this._Score != value))
				{
					this.OnScoreChanging(value);
					this.SendPropertyChanging();
					this._Score = value;
					this.SendPropertyChanged("Score");
					this.OnScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsTopScore", DbType="Bit NOT NULL")]
		public bool IsTopScore
		{
			get
			{
				return this._IsTopScore;
			}
			set
			{
				if ((this._IsTopScore != value))
				{
					this.OnIsTopScoreChanging(value);
					this.SendPropertyChanging();
					this._IsTopScore = value;
					this.SendPropertyChanged("IsTopScore");
					this.OnIsTopScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LuisResponse_LuisIntent", Storage="_LuisResponse", ThisKey="LuisResponseId", OtherKey="Id", IsForeignKey=true)]
		public LuisResponse LuisResponse
		{
			get
			{
				return this._LuisResponse.Entity;
			}
			set
			{
				LuisResponse previousValue = this._LuisResponse.Entity;
				if (((previousValue != value) 
							|| (this._LuisResponse.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LuisResponse.Entity = null;
						previousValue.LuisIntent.Remove(this);
					}
					this._LuisResponse.Entity = value;
					if ((value != null))
					{
						value.LuisIntent.Add(this);
						this._LuisResponseId = value.Id;
					}
					else
					{
						this._LuisResponseId = default(int);
					}
					this.SendPropertyChanged("LuisResponse");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LuisResponse")]
	public partial class LuisResponse : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _MailId;
		
		private System.DateTimeOffset _TimeStamp;
		
		private EntitySet<LuisEntity> _LuisEntity;
		
		private EntitySet<LuisIntent> _LuisIntent;
		
		private EntityRef<Mail> _Mail;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnMailIdChanging(int value);
    partial void OnMailIdChanged();
    partial void OnTimeStampChanging(System.DateTimeOffset value);
    partial void OnTimeStampChanged();
    #endregion
		
		public LuisResponse()
		{
			this._LuisEntity = new EntitySet<LuisEntity>(new Action<LuisEntity>(this.attach_LuisEntity), new Action<LuisEntity>(this.detach_LuisEntity));
			this._LuisIntent = new EntitySet<LuisIntent>(new Action<LuisIntent>(this.attach_LuisIntent), new Action<LuisIntent>(this.detach_LuisIntent));
			this._Mail = default(EntityRef<Mail>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailId", DbType="Int NOT NULL")]
		public int MailId
		{
			get
			{
				return this._MailId;
			}
			set
			{
				if ((this._MailId != value))
				{
					if (this._Mail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMailIdChanging(value);
					this.SendPropertyChanging();
					this._MailId = value;
					this.SendPropertyChanged("MailId");
					this.OnMailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LuisResponse_LuisEntity", Storage="_LuisEntity", ThisKey="Id", OtherKey="LuisResponseId")]
		public EntitySet<LuisEntity> LuisEntity
		{
			get
			{
				return this._LuisEntity;
			}
			set
			{
				this._LuisEntity.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LuisResponse_LuisIntent", Storage="_LuisIntent", ThisKey="Id", OtherKey="LuisResponseId")]
		public EntitySet<LuisIntent> LuisIntent
		{
			get
			{
				return this._LuisIntent;
			}
			set
			{
				this._LuisIntent.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mail_LuisResponse", Storage="_Mail", ThisKey="MailId", OtherKey="Id", IsForeignKey=true)]
		public Mail Mail
		{
			get
			{
				return this._Mail.Entity;
			}
			set
			{
				Mail previousValue = this._Mail.Entity;
				if (((previousValue != value) 
							|| (this._Mail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Mail.Entity = null;
						previousValue.LuisResponse.Remove(this);
					}
					this._Mail.Entity = value;
					if ((value != null))
					{
						value.LuisResponse.Add(this);
						this._MailId = value.Id;
					}
					else
					{
						this._MailId = default(int);
					}
					this.SendPropertyChanged("Mail");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LuisEntity(LuisEntity entity)
		{
			this.SendPropertyChanging();
			entity.LuisResponse = this;
		}
		
		private void detach_LuisEntity(LuisEntity entity)
		{
			this.SendPropertyChanging();
			entity.LuisResponse = null;
		}
		
		private void attach_LuisIntent(LuisIntent entity)
		{
			this.SendPropertyChanging();
			entity.LuisResponse = this;
		}
		
		private void detach_LuisIntent(LuisIntent entity)
		{
			this.SendPropertyChanging();
			entity.LuisResponse = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Mail")]
	public partial class Mail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Subject;
		
		private string _Body;
		
		private System.DateTimeOffset _TimeStamp;
		
		private EntitySet<LuisResponse> _LuisResponse;
		
		private EntitySet<MailAddresses> _MailAddresses;
		
		private EntitySet<MailAttachment> _MailAttachment;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnBodyChanging(string value);
    partial void OnBodyChanged();
    partial void OnTimeStampChanging(System.DateTimeOffset value);
    partial void OnTimeStampChanged();
    #endregion
		
		public Mail()
		{
			this._LuisResponse = new EntitySet<LuisResponse>(new Action<LuisResponse>(this.attach_LuisResponse), new Action<LuisResponse>(this.detach_LuisResponse));
			this._MailAddresses = new EntitySet<MailAddresses>(new Action<MailAddresses>(this.attach_MailAddresses), new Action<MailAddresses>(this.detach_MailAddresses));
			this._MailAttachment = new EntitySet<MailAttachment>(new Action<MailAttachment>(this.attach_MailAttachment), new Action<MailAttachment>(this.detach_MailAttachment));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="NVarChar(254)")]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Body", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Body
		{
			get
			{
				return this._Body;
			}
			set
			{
				if ((this._Body != value))
				{
					this.OnBodyChanging(value);
					this.SendPropertyChanging();
					this._Body = value;
					this.SendPropertyChanged("Body");
					this.OnBodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mail_LuisResponse", Storage="_LuisResponse", ThisKey="Id", OtherKey="MailId")]
		public EntitySet<LuisResponse> LuisResponse
		{
			get
			{
				return this._LuisResponse;
			}
			set
			{
				this._LuisResponse.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mail_MailAddresses", Storage="_MailAddresses", ThisKey="Id", OtherKey="MailId")]
		public EntitySet<MailAddresses> MailAddresses
		{
			get
			{
				return this._MailAddresses;
			}
			set
			{
				this._MailAddresses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mail_MailAttachment", Storage="_MailAttachment", ThisKey="Id", OtherKey="MailId")]
		public EntitySet<MailAttachment> MailAttachment
		{
			get
			{
				return this._MailAttachment;
			}
			set
			{
				this._MailAttachment.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LuisResponse(LuisResponse entity)
		{
			this.SendPropertyChanging();
			entity.Mail = this;
		}
		
		private void detach_LuisResponse(LuisResponse entity)
		{
			this.SendPropertyChanging();
			entity.Mail = null;
		}
		
		private void attach_MailAddresses(MailAddresses entity)
		{
			this.SendPropertyChanging();
			entity.Mail = this;
		}
		
		private void detach_MailAddresses(MailAddresses entity)
		{
			this.SendPropertyChanging();
			entity.Mail = null;
		}
		
		private void attach_MailAttachment(MailAttachment entity)
		{
			this.SendPropertyChanging();
			entity.Mail = this;
		}
		
		private void detach_MailAttachment(MailAttachment entity)
		{
			this.SendPropertyChanging();
			entity.Mail = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MailAddresses")]
	public partial class MailAddresses : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MailId;
		
		private string _MailAddress;
		
		private EntityRef<Mail> _Mail;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMailIdChanging(int value);
    partial void OnMailIdChanged();
    partial void OnMailAddressChanging(string value);
    partial void OnMailAddressChanged();
    #endregion
		
		public MailAddresses()
		{
			this._Mail = default(EntityRef<Mail>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MailId
		{
			get
			{
				return this._MailId;
			}
			set
			{
				if ((this._MailId != value))
				{
					if (this._Mail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMailIdChanging(value);
					this.SendPropertyChanging();
					this._MailId = value;
					this.SendPropertyChanged("MailId");
					this.OnMailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailAddress", DbType="NVarChar(254) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MailAddress
		{
			get
			{
				return this._MailAddress;
			}
			set
			{
				if ((this._MailAddress != value))
				{
					this.OnMailAddressChanging(value);
					this.SendPropertyChanging();
					this._MailAddress = value;
					this.SendPropertyChanged("MailAddress");
					this.OnMailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mail_MailAddresses", Storage="_Mail", ThisKey="MailId", OtherKey="Id", IsForeignKey=true)]
		public Mail Mail
		{
			get
			{
				return this._Mail.Entity;
			}
			set
			{
				Mail previousValue = this._Mail.Entity;
				if (((previousValue != value) 
							|| (this._Mail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Mail.Entity = null;
						previousValue.MailAddresses.Remove(this);
					}
					this._Mail.Entity = value;
					if ((value != null))
					{
						value.MailAddresses.Add(this);
						this._MailId = value.Id;
					}
					else
					{
						this._MailId = default(int);
					}
					this.SendPropertyChanged("Mail");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MailAttachment")]
	public partial class MailAttachment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MailId;
		
		private int _Id;
		
		private System.Data.Linq.Binary _Attachment;
		
		private string _FileExtension;
		
		private EntityRef<Mail> _Mail;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMailIdChanging(int value);
    partial void OnMailIdChanged();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAttachmentChanging(System.Data.Linq.Binary value);
    partial void OnAttachmentChanged();
    partial void OnFileExtensionChanging(string value);
    partial void OnFileExtensionChanged();
    #endregion
		
		public MailAttachment()
		{
			this._Mail = default(EntityRef<Mail>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MailId
		{
			get
			{
				return this._MailId;
			}
			set
			{
				if ((this._MailId != value))
				{
					if (this._Mail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMailIdChanging(value);
					this.SendPropertyChanging();
					this._MailId = value;
					this.SendPropertyChanged("MailId");
					this.OnMailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Attachment", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Attachment
		{
			get
			{
				return this._Attachment;
			}
			set
			{
				if ((this._Attachment != value))
				{
					this.OnAttachmentChanging(value);
					this.SendPropertyChanging();
					this._Attachment = value;
					this.SendPropertyChanged("Attachment");
					this.OnAttachmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileExtension", DbType="NVarChar(260)")]
		public string FileExtension
		{
			get
			{
				return this._FileExtension;
			}
			set
			{
				if ((this._FileExtension != value))
				{
					this.OnFileExtensionChanging(value);
					this.SendPropertyChanging();
					this._FileExtension = value;
					this.SendPropertyChanged("FileExtension");
					this.OnFileExtensionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mail_MailAttachment", Storage="_Mail", ThisKey="MailId", OtherKey="Id", IsForeignKey=true)]
		public Mail Mail
		{
			get
			{
				return this._Mail.Entity;
			}
			set
			{
				Mail previousValue = this._Mail.Entity;
				if (((previousValue != value) 
							|| (this._Mail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Mail.Entity = null;
						previousValue.MailAttachment.Remove(this);
					}
					this._Mail.Entity = value;
					if ((value != null))
					{
						value.MailAttachment.Add(this);
						this._MailId = value.Id;
					}
					else
					{
						this._MailId = default(int);
					}
					this.SendPropertyChanged("Mail");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
